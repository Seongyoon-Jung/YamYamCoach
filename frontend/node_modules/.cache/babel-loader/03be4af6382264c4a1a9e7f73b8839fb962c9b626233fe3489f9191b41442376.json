{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from '@/plugins/axios';\nimport store from '@/store';\nexport default {\n  name: 'SurveyView',\n  data() {\n    return {\n      showIntro: true,\n      showSurvey: false,\n      currentStep: 0,\n      questions: [],\n      answers: Array(10).fill(null),\n      options: ['전혀 그렇지 않다', '그렇지 않다', '보통이다', '그렇다', '매우 그렇다'],\n      postDate: {\n        stepLevel: 1\n      },\n      dietType: null,\n      descriptions: {\n        '균형의 마에스트로': '식사·영양·수분·운동을 고루 챙기는 ‘완벽 균형파’입니다.',\n        '심야의 스낵 헌터': '밤마다 야식을 즐겨 수면·소화 리듬이 불규칙한 ‘야행성 스낵러’입니다.',\n        '무계획의 방랑자': '식사 시간이 들쑥날쑥, TV 보며 불규칙하게 먹는 ‘방랑형 식사러’입니다.',\n        '단짠의 시럽 러버': '단 음식·인스턴트에 빠져 단짠 중독에 가까운 ‘시럽 러버’입니다.',\n        '액티브 에이스': '매일 운동·충분 수분 섭취·규칙 식단으로 건강 루틴이 탄탄한 ‘운동광’입니다.',\n        '디저트 덕후': '하루종일 달달한 디저트 한 입을 찾는 ‘디저트 덕후’입니다.',\n        '소식의 달인': '끼니마다 아주 조금씩 자주 먹으며 과식은 피하는 ‘소식 마스터’입니다.',\n        '하이드레이션 히어로': '물만 보면 달려들어 2L 이상 꾸준히 마시는 ‘수분 챔피언’입니다.',\n        '집중 먹방 챌린저': '식사할 땐 무조건 집중!TV·휴대폰 NO, ‘집중형 식사러’입니다.',\n        '헬시 뉴비': '가끔은 규칙·건강을 시도하지만 아직은 초보 단계인 ‘건강 초보’입니다.'\n      }\n    };\n  },\n  //설문조사 목록을 가져오기 위해서 페이지가 만들어 졌을때 질문목록 백에서 가져오기\n  created() {\n    axios.get('/api/survey/questions', {\n      params: {\n        stepLevel: 1\n      }\n    }).then(res => {\n      this.questions = res.data;\n    }).catch(err => {});\n  },\n  computed: {\n    isFirst() {\n      return this.currentStep === 0;\n    },\n    isLast() {\n      return this.currentStep === this.questions.length - 1;\n    }\n  },\n  methods: {\n    backToIntro() {\n      this.showIntro = true;\n    },\n    startSurvey() {\n      // 기본정보 유효성 검사\n      // if (!this.basic.height || !this.basic.weight || !this.basic.targetWeight) {\n      //   alert('모든 기본정보를 입력해주세요.');\n      //   return;\n      // }\n      this.showIntro = false;\n      this.showSurvey = true;\n    },\n    skipSurvey() {\n      this.$router.push({\n        name: 'HomeLoginView'\n      });\n    },\n    nextStep() {\n      if (!this.validate()) return;\n      this.currentStep++;\n    },\n    prevStep() {\n      if (this.currentStep > 0) this.currentStep--;\n    },\n    validate() {\n      if (this.answers[this.currentStep] === null) {\n        alert('답변을 선택해주세요.');\n        return false;\n      }\n      return true;\n    },\n    submitSurvey() {\n      this.dietType = this.result();\n\n      //console.log(this.basic);\n      let data = {\n        userId: this.$store.state.account.userId,\n        dietType: this.dietType,\n        stepLevel: 1,\n        answerValues: this.answers.toString()\n      };\n      axios.post('/api/survey/submit', data).then(res => {\n        this.showSurvey = false;\n      }).catch(err => {});\n\n      // const me = axios.get('/api/users/me');\n      // store.commit('setAccount', {\n      //   userId: me.data.userId,\n      //   username: me.data.username,\n      //   isSurveyed: me.data.isSurveyed,\n      // });\n    },\n    //설문 결과를 바탕으로 타입을 특정하기 위한 함수\n    result() {\n      const type = ['균형의 마에스트로', '심야의 스낵 헌터', '무계획의 방랑자', '단짠의 시럽 러버', '액티브 에이스', '디저트 덕후', '소식의 달인', '하이드레이션 히어로', '집중 먹방 챌린저', '헬시 뉴비'];\n      // 가중치 2차원 배열\n      const score = [[10, 0, 2, 0, 5, 0, 8, 3, 7, 4],\n      // Q1\n      [0, 10, 1, 3, 0, 7, 0, 0, 1, 2],\n      // Q2\n      [9, 1, 2, 0, 6, 0, 5, 4, 6, 3],\n      // Q3\n      [10, 0, 2, 0, 5, 0, 4, 3, 7, 4],\n      // Q4\n      [9, 0, 1, 2, 7, 0, 3, 5, 6, 4],\n      // Q5\n      [0, 0, 0, 10, 0, 8, 0, 0, 1, 2],\n      // Q6\n      [5, 0, 0, 0, 10, 0, 1, 3, 1, 2],\n      // Q7\n      [4, 0, 1, 0, 9, 0, 2, 10, 3, 2],\n      // Q8\n      [0, 10, 3, 0, 0, 4, 0, 1, 1, 2],\n      // Q9\n      [8, 0, 2, 0, 7, 0, 4, 3, 10, 3] // Q10\n      ];\n      let modify_answer = [0, 2, 5, 8, 10]; // 5가자의 선택지를 0,1,2,3,4로 곱하는 것이아니라 0,2,5,8,10으로 최대한 같은 값이 나오는 것을 막기\n\n      let total = Array(10).fill(0);\n      let max = -1;\n      let maxInd = -1;\n      for (let i = 0; i < 10; i++) {\n        for (let j = 0; j < 10; j++) {\n          total[i] += modify_answer[this.answers[j]] * score[i][j];\n        }\n        if (max < total[i]) {\n          max = total[i];\n          maxInd = i;\n        }\n      }\n\n      // console.log(total, type[maxInd])\n      return type[maxInd];\n    }\n  }\n};","map":{"version":3,"names":["axios","store","name","data","showIntro","showSurvey","currentStep","questions","answers","Array","fill","options","postDate","stepLevel","dietType","descriptions","created","get","params","then","res","catch","err","computed","isFirst","isLast","length","methods","backToIntro","startSurvey","skipSurvey","$router","push","nextStep","validate","prevStep","alert","submitSurvey","result","userId","$store","state","account","answerValues","toString","post","type","score","modify_answer","total","max","maxInd","i","j"],"sources":["C:\\Users\\taewo\\Desktop\\YamYamCoach\\frontend\\src\\views\\SurveyView.vue"],"sourcesContent":["<template>\r\n  <main class=\"survey-page\">\r\n    <div class=\"container mt-5\">\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-md-8\">\r\n          <!-- 1) 인트로 화면 -->\r\n          <div v-if=\"showIntro\" class=\"card p-4 shadow-sm text-center\">\r\n            <h3 class=\"text-primary mb-3\">🍽️ 냠냠코치 식습관 설문조사 🍽️</h3>\r\n            <p>\r\n              당신의 식습관을 흥미진진하게 파헤쳐 줄<br />\r\n              <strong>‘냠냠코치 식습관 분석’</strong>에 초대합니다!<br />\r\n              질문에 솔직하게 답하면 나만의 맞춤 리포트를 드려요.<br /><br />\r\n              ※주의 ) <u>건너뛰기</u> 시엔 나이·성별 평균값 기반 분석이\r\n              제공되어<br />\r\n              정확도가 떨어질 수 있으니 주의하세요!<br /><br />\r\n              🎉 특별 이벤트: 참여만 해도 <strong>냠냠코인 10,000개</strong>를\r\n              드립니다!\r\n            </p>\r\n            <div class=\"mt-4\">\r\n              <button class=\"btn btn-success me-2\" @click=\"startSurvey\">\r\n                설문 시작하기\r\n              </button>\r\n              <router-link to=\"/\" class=\"btn btn-outline-secondary\">\r\n                건너뛰기\r\n              </router-link>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 3) 실제 설문 화면 -->\r\n          <div v-else-if=\"showSurvey\" class=\"card p-4 shadow-sm\">\r\n            <h3 class=\"text-center text-primary mb-4\">식습관 분석</h3>\r\n\r\n            <!-- 스텝 인디케이터 -->\r\n            <div class=\"d-flex justify-content-center mb-4\">\r\n              <span\r\n                v-for=\"(q, i) in questions\"\r\n                :key=\"i\"\r\n                class=\"step mx-1\"\r\n                :class=\"{ active: currentStep === i, finish: i < currentStep }\"\r\n                >{{ i + 1 }}</span\r\n              >\r\n            </div>\r\n\r\n            <!-- 질문 탭 -->\r\n            <div\r\n              v-for=\"(q, i) in questions\"\r\n              :key=\"i\"\r\n              v-show=\"currentStep === i\"\r\n              class=\"tab\"\r\n            >\r\n              <h5>{{ q.questionText }}</h5>\r\n              <div class=\"mt-3 d-flex justify-content-between\">\r\n                <div\r\n                  class=\"form-check form-check-inline\"\r\n                  v-for=\"(opt, idx) in options\"\r\n                  :key=\"idx\"\r\n                >\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    :name=\"'q' + i\"\r\n                    :id=\"'q' + i + '-opt' + idx\"\r\n                    :value=\"idx\"\r\n                    v-model=\"answers[i]\"\r\n                  />\r\n                  <label\r\n                    class=\"form-check-label\"\r\n                    :for=\"'q' + i + '-opt' + idx\"\r\n                    >{{ opt }}</label\r\n                  >\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- 네비게이션 버튼 -->\r\n            <div class=\"d-flex justify-content-between mt-4\">\r\n              <button\r\n                class=\"btn btn-secondary\"\r\n                @click=\"prevStep\"\r\n                :disabled=\"isFirst\"\r\n              >\r\n                이전\r\n              </button>\r\n              <button\r\n                class=\"btn btn-primary\"\r\n                @click=\"isLast ? submitSurvey() : nextStep()\"\r\n              >\r\n                {{ isLast ? '제출' : '다음' }}\r\n              </button>\r\n            </div>\r\n\r\n            <!-- 완료 메시지\r\n              <div v-if=\"finished\" class=\"text-center mt-4\">\r\n                <h4 class=\"text-success\">설문이 완료되었습니다!</h4>\r\n                <p>소중한 응답 감사합니다.</p>\r\n              </div> -->\r\n          </div>\r\n\r\n          <!-- 4) 결과 화면 -->\r\n          <div v-else class=\"card p-4 shadow-sm text-center result-card\">\r\n            <!-- 결과 타입 -->\r\n            <h3 class=\"text-primary mb-2\">{{ dietType }}</h3>\r\n\r\n            <!-- 간단 설명 (dietType별로 다른 설명을 data나 computed로 관리해도 좋아요) -->\r\n            <p class=\"mb-4 text-muted\">\r\n              {{ descriptions[dietType] }}\r\n            </p>\r\n\r\n            <!-- 이미지: 캐릭터 일러스트 -->\r\n            <img\r\n              :src=\"`/survey/${dietType}.png`\"\r\n              alt=\"결과 캐릭터\"\r\n              class=\"result-img mb-3 mx-auto d-block\"\r\n              width=\"50%;\"\r\n            />\r\n\r\n            <!-- 메인으로 돌아가기 버튼 -->\r\n            <router-link to=\"/home\" class=\"btn btn-outline-secondary\">\r\n              메인으로 돌아가기\r\n            </router-link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </main>\r\n</template>\r\n\r\n<script>\r\nimport axios from '@/plugins/axios';\r\nimport store from '@/store';\r\n\r\nexport default {\r\n  name: 'SurveyView',\r\n  data() {\r\n    return {\r\n      showIntro: true,\r\n      showSurvey: false,\r\n      currentStep: 0,\r\n      questions: [],\r\n      answers: Array(10).fill(null),\r\n      options: [\r\n        '전혀 그렇지 않다',\r\n        '그렇지 않다',\r\n        '보통이다',\r\n        '그렇다',\r\n        '매우 그렇다',\r\n      ],\r\n      postDate: {\r\n        stepLevel: 1,\r\n      },\r\n      dietType: null,\r\n      descriptions: {\r\n        '균형의 마에스트로':\r\n          '식사·영양·수분·운동을 고루 챙기는 ‘완벽 균형파’입니다.',\r\n        '심야의 스낵 헌터':\r\n          '밤마다 야식을 즐겨 수면·소화 리듬이 불규칙한 ‘야행성 스낵러’입니다.',\r\n        '무계획의 방랑자':\r\n          '식사 시간이 들쑥날쑥, TV 보며 불규칙하게 먹는 ‘방랑형 식사러’입니다.',\r\n        '단짠의 시럽 러버':\r\n          '단 음식·인스턴트에 빠져 단짠 중독에 가까운 ‘시럽 러버’입니다.',\r\n        '액티브 에이스':\r\n          '매일 운동·충분 수분 섭취·규칙 식단으로 건강 루틴이 탄탄한 ‘운동광’입니다.',\r\n        '디저트 덕후':\r\n          '하루종일 달달한 디저트 한 입을 찾는 ‘디저트 덕후’입니다.',\r\n        '소식의 달인':\r\n          '끼니마다 아주 조금씩 자주 먹으며 과식은 피하는 ‘소식 마스터’입니다.',\r\n        '하이드레이션 히어로':\r\n          '물만 보면 달려들어 2L 이상 꾸준히 마시는 ‘수분 챔피언’입니다.',\r\n        '집중 먹방 챌린저':\r\n          '식사할 땐 무조건 집중!TV·휴대폰 NO, ‘집중형 식사러’입니다.',\r\n        '헬시 뉴비':\r\n          '가끔은 규칙·건강을 시도하지만 아직은 초보 단계인 ‘건강 초보’입니다.',\r\n      },\r\n    };\r\n  },\r\n  //설문조사 목록을 가져오기 위해서 페이지가 만들어 졌을때 질문목록 백에서 가져오기\r\n  created() {\r\n    axios\r\n      .get('/api/survey/questions', { params: { stepLevel: 1 } })\r\n      .then((res) => {\r\n        this.questions = res.data;\r\n      })\r\n      .catch((err) => {});\r\n  },\r\n  computed: {\r\n    isFirst() {\r\n      return this.currentStep === 0;\r\n    },\r\n    isLast() {\r\n      return this.currentStep === this.questions.length - 1;\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    backToIntro() {\r\n      this.showIntro = true;\r\n    },\r\n    startSurvey() {\r\n      // 기본정보 유효성 검사\r\n      // if (!this.basic.height || !this.basic.weight || !this.basic.targetWeight) {\r\n      //   alert('모든 기본정보를 입력해주세요.');\r\n      //   return;\r\n      // }\r\n      this.showIntro = false;\r\n      this.showSurvey = true;\r\n    },\r\n    skipSurvey() {\r\n      this.$router.push({ name: 'HomeLoginView' });\r\n    },\r\n    nextStep() {\r\n      if (!this.validate()) return;\r\n      this.currentStep++;\r\n    },\r\n    prevStep() {\r\n      if (this.currentStep > 0) this.currentStep--;\r\n    },\r\n    validate() {\r\n      if (this.answers[this.currentStep] === null) {\r\n        alert('답변을 선택해주세요.');\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    submitSurvey() {\r\n      this.dietType = this.result();\r\n\r\n      //console.log(this.basic);\r\n      let data = {\r\n        userId: this.$store.state.account.userId,\r\n        dietType: this.dietType,\r\n        stepLevel: 1,\r\n        answerValues: this.answers.toString(),\r\n      };\r\n\r\n      axios\r\n        .post('/api/survey/submit', data)\r\n        .then((res) => {\r\n          this.showSurvey = false;\r\n        })\r\n        .catch((err) => {});\r\n\r\n      // const me = axios.get('/api/users/me');\r\n      // store.commit('setAccount', {\r\n      //   userId: me.data.userId,\r\n      //   username: me.data.username,\r\n      //   isSurveyed: me.data.isSurveyed,\r\n      // });\r\n    },\r\n\r\n    //설문 결과를 바탕으로 타입을 특정하기 위한 함수\r\n    result() {\r\n      const type = [\r\n        '균형의 마에스트로',\r\n        '심야의 스낵 헌터',\r\n        '무계획의 방랑자',\r\n        '단짠의 시럽 러버',\r\n        '액티브 에이스',\r\n        '디저트 덕후',\r\n        '소식의 달인',\r\n        '하이드레이션 히어로',\r\n        '집중 먹방 챌린저',\r\n        '헬시 뉴비',\r\n      ];\r\n      // 가중치 2차원 배열\r\n      const score = [\r\n        [10, 0, 2, 0, 5, 0, 8, 3, 7, 4], // Q1\r\n        [0, 10, 1, 3, 0, 7, 0, 0, 1, 2], // Q2\r\n        [9, 1, 2, 0, 6, 0, 5, 4, 6, 3], // Q3\r\n        [10, 0, 2, 0, 5, 0, 4, 3, 7, 4], // Q4\r\n        [9, 0, 1, 2, 7, 0, 3, 5, 6, 4], // Q5\r\n        [0, 0, 0, 10, 0, 8, 0, 0, 1, 2], // Q6\r\n        [5, 0, 0, 0, 10, 0, 1, 3, 1, 2], // Q7\r\n        [4, 0, 1, 0, 9, 0, 2, 10, 3, 2], // Q8\r\n        [0, 10, 3, 0, 0, 4, 0, 1, 1, 2], // Q9\r\n        [8, 0, 2, 0, 7, 0, 4, 3, 10, 3], // Q10\r\n      ];\r\n\r\n      let modify_answer = [0, 2, 5, 8, 10]; // 5가자의 선택지를 0,1,2,3,4로 곱하는 것이아니라 0,2,5,8,10으로 최대한 같은 값이 나오는 것을 막기\r\n\r\n      let total = Array(10).fill(0);\r\n      let max = -1;\r\n      let maxInd = -1;\r\n\r\n      for (let i = 0; i < 10; i++) {\r\n        for (let j = 0; j < 10; j++) {\r\n          total[i] += modify_answer[this.answers[j]] * score[i][j];\r\n        }\r\n        if (max < total[i]) {\r\n          max = total[i];\r\n          maxInd = i;\r\n        }\r\n      }\r\n\r\n      // console.log(total, type[maxInd])\r\n      return type[maxInd];\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.survey-page {\r\n  background: #f8f9fa;\r\n  min-height: 100vh;\r\n  padding-bottom: 2rem;\r\n}\r\n.step {\r\n  display: inline-block;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background: #ddd;\r\n  border-radius: 50%;\r\n  line-height: 2rem;\r\n  text-align: center;\r\n  color: #6c757d;\r\n  opacity: 0.5;\r\n  transition: all 0.3s;\r\n}\r\n.step.active {\r\n  opacity: 1;\r\n  background: #6f42c1;\r\n  color: #fff;\r\n}\r\n.step.finish {\r\n  background: #6f42c1;\r\n  color: #fff;\r\n  opacity: 1;\r\n}\r\n/* 인트로/기본정보 카드 */\r\n.card.text-center p,\r\n.card h4 {\r\n  line-height: 1.6;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}