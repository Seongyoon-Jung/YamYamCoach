{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from '@/plugins/axios';\nimport ConfirmDialog from '@/components/ConfirmDialog.vue';\nexport default {\n  name: 'SignupView',\n  // name은 index.js에 선언해놓은 이름과 똑같아야함\n  components: {\n    ConfirmDialog\n  },\n  data() {\n    return {\n      isbasic: true,\n      result: {\n        email: '',\n        password: '',\n        checkPassword: '',\n        checkedPasswordSame: '',\n        username: '',\n        gender: '',\n        birthDate: '',\n        checkedEmail: '',\n        checkedUsername: '',\n        checkedEmailRule: '',\n        checkedPasswordRule: '',\n        checkedUsernameRule: '',\n        checkedBirthDateRule: ''\n      },\n      success: {\n        email: '',\n        username: ''\n      },\n      optionResult: {\n        height: '',\n        weight: '',\n        targetWeight: ''\n      },\n      click: false,\n      warning: {\n        email: '',\n        password: '',\n        checkPassword: '',\n        username: '',\n        gender: '',\n        birthDate: ''\n      }\n    };\n  },\n  created() {},\n  methods: {\n    prevBasic() {\n      this.isbasic = true;\n    },\n    nextBasic() {\n      this.warningMessage();\n      if (Object.values(this.result).includes('')) {\n        this.click = true;\n        return;\n      }\n      this.isbasic = false;\n    },\n    warningMessage() {\n      if (!this.result.email) {\n        this.warning.email = \"이메일을 입력하세요\";\n        this.result.checkedEmail = false;\n      } else if (this.result.email && !this.result.checkedEmail || this.success.email !== this.result.email) {\n        this.result.checkedEmail = false;\n        this.warning.email = \"이메일 중복을 확인하세요\";\n      } else if (this.result.email) {\n        if (this.checkEmailRule()) {\n          this.warning.email = '';\n        } else {\n          this.warning.email = '이메일을 정확히 입력하세요';\n        }\n      }\n      if (!this.result.password) {\n        this.warning.password = \"비밀번호를 입력하세요\";\n      } else {\n        if (this.checkPasswordRule()) {\n          this.warning.password = '';\n        } else {\n          this.warning.password = '비밀번호가 규칙에 맞지 않습니다';\n        }\n      }\n      if (!this.result.checkPassword) {\n        this.warning.checkPassword = \"비밀번호를 입력하세요\";\n        this.result.checkedPasswordSame = false;\n      } else if (this.result.checkPassword !== this.result.password) {\n        this.warning.checkPassword = \"비밀번호가 일치하지 않습니다\";\n        this.result.checkedPasswordSame = false;\n      } else {\n        this.warning.checkPassword = '';\n        this.result.checkedPasswordSame = true;\n      }\n      if (!this.result.username) {\n        this.warning.username = '닉네임을 입력하세요';\n        this.result.checkedUsername = false;\n      } else if (this.result.username && !this.result.checkedUsername || this.success.username !== this.result.username) {\n        this.result.checkedUsername = false;\n        this.warning.username = \"닉네임 중복을 확인하세요\";\n      } else if (this.result.username) {\n        if (this.checkUsernameRule()) {\n          this.warning.username = '';\n        } else {\n          this.warning.username = '닉네임이 규칙에 맞지않습니다';\n        }\n      }\n      if (this.result.gender === '') {\n        this.warning.gender = '성별을 선택하세요';\n      } else {\n        this.warning.gender = '';\n      }\n      if (!this.result.birthDate) {\n        this.warning.birthDate = '생년월일을 입력하세요';\n        this.result.checkedBirthDateRule = false;\n      } else if (!this.isValidCompactDate()) {\n        this.warning.birthDate = '생년월일을 정확히 입력하세요';\n        this.result.checkedBirthDateRule = false;\n      } else {\n        this.result.checkedBirthDateRule = true;\n        this.warning.birthDate = '';\n      }\n    },\n    async handleSignup() {\n      // 빈 값이 있으면\n      if (Object.values(this.optionResult).includes('')) {\n        const ok = await this.$refs.confirmDialog.open({\n          title: '선택정보 확인',\n          message: `\n            선택정보 미입력 시 정확한 식단분석이 불가능합니다.<br/>\n            그래도 진행하시겠습니까?\n          `\n        });\n        if (!ok) {\n          // 유저가 취소 눌렀을 때\n          return;\n        }\n      }\n      // 확인 눌렀거나, 애초에 빈 값이 없을 때\n      this.save();\n    },\n    save() {\n      var stringToDate = this.result.birthDate;\n      stringToDate = stringToDate.substring(0, 4) + '-' + stringToDate.substring(4, 6) + '-' + stringToDate.substring(6, 8);\n      // 입력 했을때 20000101 에서 보내기직전에 2000-01-01로 바꾸지 않기 위해서 새로만들어서 보내기기\n\n      const post = {\n        email: this.result.email,\n        password: this.result.password,\n        username: this.result.username,\n        gender: this.result.gender,\n        birthDate: stringToDate,\n        height: this.optionResult.height,\n        weight: this.optionResult.weight,\n        targetWeight: this.optionResult.targetWeight\n      };\n      axios.post('/api/users', post).then(res => {\n        this.$router.push({\n          name: 'LoginView'\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    isValidCompactDate() {\n      const pattern = /^(19|20)\\d{2}(?:(?:0[13578]|1[02])(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)(?:0[1-9]|[12]\\d|30)|02(?:0[1-9]|1\\d|2\\d))$/;\n      if (!pattern.test(this.result.birthDate)) {\n        this.result.checkedBirthDateRule = false;\n        return false;\n      }\n      // 윤년이면서 2월 29일인 경우만 별도 허용\n      const year = parseInt(this.result.birthDate.slice(0, 4), 10);\n      const month = this.result.birthDate.slice(4, 6),\n        day = this.result.birthDate.slice(6, 8);\n      if (month === \"02\" && day === \"29\") {\n        if (year % 4 === 0 && year % 100 !== 0 || year % 400 === 0) {\n          return true;\n        }\n        this.result.checkedBirthDateRule = false;\n        return false;\n      }\n      return true;\n    },\n    checkEmail() {\n      this.click = true;\n      if (!this.result.email) {\n        this.result.checkedEmail = false;\n        this.warning.email = '이메일을 입력하세요';\n        return;\n      }\n      if (!this.checkEmailRule()) {\n        this.result.checkedEmail = false;\n        this.warning.email = '이메일을 정확히 입력하세요';\n        return;\n      }\n      axios.get('/api/users/check-email', {\n        params: {\n          email: this.result.email\n        }\n      }).then(res => {\n        this.result.checkedEmail = true;\n        this.success.email = this.result.email;\n      }).catch(err => {\n        this.warning.email = '사용 불가능한 이메일 입니다';\n        this.result.checkedEmail = false;\n      });\n    },\n    checkUsername() {\n      this.click = true;\n      if (!this.result.username) {\n        this.result.checkedUsername = false;\n        this.warning.username = '닉네임을 입력하세요';\n        return;\n      }\n      if (!this.checkUsernameRule()) {\n        this.result.checkedUsername = false;\n        this.warning.username = '닉네임이 규칙에 맞지 않습니다';\n        return;\n      }\n      axios.get('/api/users/check-username', {\n        params: {\n          username: this.result.username\n        }\n      }).then(res => {\n        this.result.checkedUsername = true;\n        this.success.username = this.result.username;\n      }).catch(err => {\n        this.warning.username = '사용 불가능한 닉네임 입니다';\n        this.result.checkedUsername = false;\n      });\n    },\n    checkEmailRule() {\n      // 이메일 유효성 검사를 위한 정규식 표현 \n      const pattern = /^[A-Za-z0-9_\\.\\-]+@[A-Za-z0-9\\-]+\\.[A-za-z0-9\\-]+/;\n      if (pattern.test(this.result.email)) {\n        this.result.checkedEmailRule = true;\n        return true;\n      }\n      this.result.checkedEmailRule = false;\n      return false;\n    },\n    checkPasswordRule() {\n      const pattern = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=\\[\\]{}|;':\",.<>\\/?])[A-Za-z\\d!@#$%^&*()_+\\-=\\[\\]{}|;':\",.<>\\/?]{8,16}$/;\n      if (pattern.test(this.result.password)) {\n        this.result.checkedPasswordRule = true;\n        return true;\n      }\n      this.result.checkedPasswordRule = false;\n      return false;\n    },\n    checkUsernameRule() {\n      const pattern = /^[A-Za-z0-9\\u1100-\\u11FF\\u3130-\\u318F\\uAC00-\\uD7A3]{4,10}$/;\n      if (pattern.test(this.result.username)) {\n        this.result.checkedUsernameRule = true;\n        return true;\n      }\n      this.result.checkedUsernameRule = false;\n      return false;\n    }\n  }\n};","map":{"version":3,"names":["axios","ConfirmDialog","name","components","data","isbasic","result","email","password","checkPassword","checkedPasswordSame","username","gender","birthDate","checkedEmail","checkedUsername","checkedEmailRule","checkedPasswordRule","checkedUsernameRule","checkedBirthDateRule","success","optionResult","height","weight","targetWeight","click","warning","created","methods","prevBasic","nextBasic","warningMessage","Object","values","includes","checkEmailRule","checkPasswordRule","checkUsernameRule","isValidCompactDate","handleSignup","ok","$refs","confirmDialog","open","title","message","save","stringToDate","substring","post","then","res","$router","push","catch","err","console","log","pattern","test","year","parseInt","slice","month","day","checkEmail","get","params","checkUsername"],"sources":["C:\\Users\\taewo\\Desktop\\YamYamCoach\\frontend\\src\\views\\SignupView.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-flex align-items-center justify-content-center min-vh-100\">\r\n    <div\r\n      class=\"card p-5 shadow-lg\"\r\n      style=\"max-width: 600px; width: 100%; border-radius: 1rem\"\r\n    >\r\n      <h3 class=\"text-center fw-bold mb-4 text-dark\" v-if=\"isbasic\">\r\n        회원 정보 입력 (필수)\r\n      </h3>\r\n      <div v-else>\r\n        <h3 class=\"text-center fw-bold mb-4 text-dark\">\r\n          회원 정보 입력 (선택)\r\n        </h3>\r\n        <p>\r\n          ※ <span class=\"text-danger\">주의</span> ) 미입력 시엔 나이·성별 평균값 기반 분석이 제공되어<br />\r\n          정확도가 떨어질 수 있으니 주의하세요!<br />\r\n        </p>\r\n      </div>\r\n      <hr />\r\n\r\n      <form>\r\n        <div class=\"row g-3 text-start\" v-if=\"isbasic\">\r\n          <!-- 이메일 -->\r\n          <div class=\"col-md-12\">\r\n            <!-- 레이블을 input-group 위에 두고 form-label 클래스로 왼쪽 정렬 -->\r\n            <label for=\"email\" class=\"form-label fw-bold\"\r\n              >이메일\r\n\r\n              <span class=\"text-danger fw-normal warning\" v-show=\"click\" v-if=\"!result.checkedEmail\" v-text=\"warning.email\"></span>\r\n              <span class=\"text-success fw-normal warning\" v-show=\"click\" v-else>사용 가능한 이메일입니다</span>\r\n      \r\n            </label>\r\n\r\n            <div class=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                id=\"email\"\r\n                class=\"form-control\"\r\n                placeholder=\"example@domain.com\"\r\n                required\r\n                name=\"email\"\r\n                v-model=\"result.email\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-outline-secondary\"\r\n                @click=\"checkEmail\"\r\n              >\r\n                중복 확인\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 비밀번호 -->\r\n          <div class=\"col-md-12\">\r\n            <label for=\"password\" class=\"form-label fw-bold\"\r\n              >비밀번호\r\n              <span class=\"text-danger fw-normal warning\" v-show=\"click\" v-text=\"warning.password\"></span>\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              class=\"form-control\"\r\n              placeholder=\"비밀번호를 입력하세요\"\r\n              required\r\n              name=\"password\"\r\n              v-model=\"result.password\"\r\n            />\r\n            <span class=\"text-info warning\" >※ 8~16자의 영문, 숫자, 특수문자를 사용해 주세요.</span>\r\n          </div>\r\n\r\n          <!-- 비밀번호 재입력 -->\r\n          <div class=\"col-md-12\">\r\n            <label for=\"checkPassword\" class=\"form-label fw-bold\"\r\n              >비밀번호 확인\r\n              <span class=\"text-danger fw-normal warning\" v-show=\"click\" v-text=\"warning.checkPassword\"></span>\r\n            </label>\r\n\r\n            <input\r\n              type=\"password\"\r\n              id=\"checkPassword\"\r\n              class=\"form-control\"\r\n              placeholder=\"비밀번호를 재입력해주세요\"\r\n              required\r\n              v-model=\"result.checkPassword\"\r\n            />\r\n          </div>\r\n\r\n          <!-- 닉네임 -->\r\n          <div class=\"col-md-12\">\r\n            <label for=\"username\" class=\"form-label fw-bold\"\r\n              >닉네임\r\n              <span class=\"text-danger fw-normal warning\" v-show=\"click\" v-if=\"!result.checkedUsername\" v-text=\"warning.username\"></span>\r\n              <span class=\"text-success fw-normal warning\" v-show=\"click\" v-else>사용 가능한 닉네임입니다</span>\r\n            </label>\r\n\r\n            <div class=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                id=\"username\"\r\n                class=\"form-control\"\r\n                placeholder=\"사용할 닉네임\"\r\n                required\r\n                name=\"username\"\r\n                v-model=\"result.username\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-outline-secondary\"\r\n                @click=\"checkUsername\"\r\n              >\r\n                중복 확인\r\n              </button>\r\n            </div>\r\n            <span class=\"text-info warning\" >※ 4~10자의 한글, 영문, 숫자를 사용해 주세요.</span>\r\n          </div>\r\n\r\n          <div class=\"col-md-12\">\r\n            <!-- 성별 -->\r\n            <label class=\"form-label fw-bold\"\r\n              >성별\r\n              <span class=\"text-danger fw-normal warning\" v-show=\"click\" v-text=\"warning.gender\"></span>\r\n            </label>\r\n              <div class=\"btn-group w-100\" role=\"group\">\r\n                <input\r\n                type=\"radio\"\r\n                class=\"btn-check\"\r\n                name=\"gender\"\r\n                id=\"male\"\r\n                :value=\"false\"\r\n                v-model=\"result.gender\"\r\n                autocomplete=\"off\"\r\n              />\r\n              <label class=\"btn btn-outline-secondary flex-fill\" for=\"male\">\r\n                남성\r\n              </label>\r\n\r\n              <input\r\n                type=\"radio\"\r\n                class=\"btn-check\"\r\n                name=\"gender\"\r\n                id=\"female\"\r\n                :value=\"true\"\r\n                v-model=\"result.gender\"\r\n                autocomplete=\"off\"\r\n              />\r\n              <label class=\"btn btn-outline-secondary flex-fill\" for=\"female\">\r\n                여성\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 생년월일 -->\r\n          <div class=\"col-md-12\">\r\n            <label for=\"birthdate\" class=\"form-label fw-bold\">\r\n              생년월일\r\n              <span class=\"text-danger fw-normal warning\" v-show=\"click\" v-text=\"warning.birthDate\"></span>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"birthdate\"\r\n              class=\"form-control\"\r\n              required\r\n              name=\"birthDate\"\r\n              placeholder=\"예) 20000101\"\r\n              v-model=\"result.birthDate\"\r\n            />\r\n          </div>\r\n\r\n          <!-- 추가 정보 버튼 -->\r\n          <div class=\"d-flex justify-content-between mt-4\">\r\n            <router-link class=\"btn btn-secondary\" to=\"/login\"\r\n              >이전</router-link\r\n            >\r\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"nextBasic\">\r\n              다음\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row g-3\" v-else>\r\n          <div class=\"col-md-12\">\r\n            <div class=\"row align-items-center\">\r\n              <!-- 키 -->\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">키 (cm)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  class=\"form-control\"\r\n                  v-model=\"optionResult.height\"\r\n                  min=\"0\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <!-- 현재 체중 -->\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">현재 체중 (kg)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  class=\"form-control\"\r\n                  v-model=\"optionResult.weight\"\r\n                  min=\"0\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <!-- 목표 체중 -->\r\n              <div class=\"mb-0\">\r\n                <label class=\"form-label\">목표 체중 (kg)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  class=\"form-control\"\r\n                  v-model=\"optionResult.targetWeight\"\r\n                  min=\"0\"\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"d-flex justify-content-between\">\r\n            <button class=\"btn btn-secondary\" @click=\"prevBasic\">이전</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"handleSignup\">\r\n              회원가입\r\n            </button>\r\n            \r\n            \r\n          </div>\r\n        </div>\r\n      </form>\r\n      \r\n      <div class=\"text-center mt-4\">\r\n        <router-link\r\n          to=\"/login\"\r\n          class=\"text-decoration-none text-black-50 small\"\r\n        >\r\n          이미 계정이 있으신가요?\r\n          <span class=\"fw-semibold text-black\">로그인</span>\r\n        </router-link>\r\n      </div>\r\n    </div>\r\n    <!-- ConfirmDialog 컴포넌트를 ref 로 선언 -->\r\n    <ConfirmDialog ref=\"confirmDialog\" />\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.card {\r\n  background-color: white;\r\n  border-radius: 1rem;\r\n}\r\n\r\ninput::placeholder {\r\n  font-size: 0.9rem;\r\n  color: #999;\r\n}\r\n\r\n.warning {\r\n  font-size: small;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport axios from '@/plugins/axios';\r\nimport ConfirmDialog from '@/components/ConfirmDialog.vue';\r\n\r\nexport default {\r\n  name: 'SignupView', // name은 index.js에 선언해놓은 이름과 똑같아야함\r\n  components: { ConfirmDialog },\r\n  data() {\r\n    return {\r\n      isbasic: true,\r\n      result: {\r\n        email: '',\r\n        password: '',\r\n        checkPassword: '',\r\n        checkedPasswordSame: '',\r\n        username: '',\r\n        gender: '',\r\n        birthDate: '',\r\n        checkedEmail: '',\r\n        checkedUsername: '',\r\n        checkedEmailRule:'',\r\n        checkedPasswordRule:'',\r\n        checkedUsernameRule:'',\r\n        checkedBirthDateRule:''\r\n      },\r\n      success:{\r\n        email : '',\r\n        username : ''\r\n      },\r\n      optionResult :{\r\n        height: '',\r\n        weight: '',\r\n        targetWeight: '',\r\n      },\r\n      click: false,\r\n      warning: {\r\n        email: '',\r\n        password: '',\r\n        checkPassword: '',\r\n        username: '',\r\n        gender: '',\r\n        birthDate: '',\r\n      },\r\n    };\r\n  },\r\n  created() {},\r\n  methods: {\r\n    prevBasic() {\r\n      this.isbasic = true;\r\n    },\r\n\r\n    nextBasic() {\r\n      this.warningMessage()\r\n      if(Object.values(this.result).includes('')){\r\n        this.click = true\r\n        return\r\n      }\r\n\r\n      this.isbasic = false;\r\n    },\r\n    warningMessage(){\r\n      if(!this.result.email){\r\n        this.warning.email = \"이메일을 입력하세요\"\r\n        this.result.checkedEmail = false\r\n      }\r\n      else if(this.result.email && !this.result.checkedEmail || this.success.email !== this.result.email){\r\n        this.result.checkedEmail = false \r\n        this.warning.email = \"이메일 중복을 확인하세요\"\r\n      }\r\n      else if(this.result.email){\r\n        if(this.checkEmailRule()){\r\n          this.warning.email = ''\r\n        }\r\n        else{\r\n          this.warning.email = '이메일을 정확히 입력하세요'\r\n        }\r\n      }\r\n\r\n      if(!this.result.password){\r\n        this.warning.password = \"비밀번호를 입력하세요\"\r\n      }\r\n      else{\r\n        if(this.checkPasswordRule()){\r\n          this.warning.password = ''\r\n        }\r\n        else{\r\n          this.warning.password = '비밀번호가 규칙에 맞지 않습니다'\r\n        }\r\n      }\r\n\r\n      if(!this.result.checkPassword){\r\n        this.warning.checkPassword = \"비밀번호를 입력하세요\"\r\n        this.result.checkedPasswordSame = false;\r\n      }\r\n      else if(this.result.checkPassword !== this.result.password){\r\n        this.warning.checkPassword = \"비밀번호가 일치하지 않습니다\"\r\n        this.result.checkedPasswordSame = false;\r\n      }\r\n      else{\r\n        this.warning.checkPassword = ''\r\n        this.result.checkedPasswordSame = true;\r\n      }\r\n\r\n      if(!this.result.username){\r\n        this.warning.username = '닉네임을 입력하세요'\r\n        this.result.checkedUsername = false\r\n      }\r\n      else if((this.result.username && !this.result.checkedUsername) || this.success.username !==this.result.username){\r\n        this.result.checkedUsername = false\r\n        this.warning.username = \"닉네임 중복을 확인하세요\"\r\n      }\r\n      else if(this.result.username){\r\n        if(this.checkUsernameRule()){\r\n          this.warning.username = ''\r\n        }\r\n        else{\r\n          this.warning.username = '닉네임이 규칙에 맞지않습니다'\r\n        }\r\n      }\r\n\r\n      if(this.result.gender === ''){\r\n        this.warning.gender = '성별을 선택하세요'\r\n      }\r\n      else{\r\n        this.warning.gender = ''\r\n      }\r\n\r\n      if (!this.result.birthDate) {\r\n        this.warning.birthDate = '생년월일을 입력하세요';\r\n        this.result.checkedBirthDateRule = false;\r\n      } else if (!this.isValidCompactDate()) {\r\n        this.warning.birthDate = '생년월일을 정확히 입력하세요'\r\n        this.result.checkedBirthDateRule = false;\r\n      }\r\n      else{\r\n        this.result.checkedBirthDateRule = true;\r\n        this.warning.birthDate = ''\r\n      }\r\n    },\r\n    async handleSignup() {\r\n      // 빈 값이 있으면\r\n      if (Object.values(this.optionResult).includes('')) {\r\n        const ok = await this.$refs.confirmDialog.open({\r\n          title: '선택정보 확인',\r\n          message: `\r\n            선택정보 미입력 시 정확한 식단분석이 불가능합니다.<br/>\r\n            그래도 진행하시겠습니까?\r\n          `\r\n        });\r\n        if (!ok) {\r\n          // 유저가 취소 눌렀을 때\r\n          return;\r\n        }\r\n      }\r\n      // 확인 눌렀거나, 애초에 빈 값이 없을 때\r\n      this.save();\r\n    },\r\n\r\n    save() {\r\n      var stringToDate = this.result.birthDate;\r\n      stringToDate =\r\n        stringToDate.substring(0, 4) +\r\n        '-' +\r\n        stringToDate.substring(4, 6) +\r\n        '-' +\r\n        stringToDate.substring(6, 8);\r\n      // 입력 했을때 20000101 에서 보내기직전에 2000-01-01로 바꾸지 않기 위해서 새로만들어서 보내기기\r\n\r\n\r\n\r\n      const post = {\r\n        email: this.result.email,\r\n        password: this.result.password,\r\n        username: this.result.username,\r\n        gender: this.result.gender,\r\n        birthDate: stringToDate,\r\n        height: this.optionResult.height,\r\n        weight: this.optionResult.weight,\r\n        targetWeight: this.optionResult.targetWeight,\r\n      };\r\n\r\n      axios\r\n        .post('/api/users', post)\r\n        .then((res) => {\r\n          this.$router.push({ name: 'LoginView' });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    isValidCompactDate() {\r\n      const pattern = /^(19|20)\\d{2}(?:(?:0[13578]|1[02])(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)(?:0[1-9]|[12]\\d|30)|02(?:0[1-9]|1\\d|2\\d))$/;\r\n      if (!pattern.test(this.result.birthDate)) {\r\n        this.result.checkedBirthDateRule = false;\r\n        return false;\r\n      }\r\n      // 윤년이면서 2월 29일인 경우만 별도 허용\r\n      const year = parseInt(this.result.birthDate.slice(0,4), 10);\r\n      const month = this.result.birthDate.slice(4,6), day = this.result.birthDate.slice(6,8);\r\n      if (month === \"02\" && day === \"29\") {\r\n        if((year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0)){\r\n          return true\r\n        }\r\n        this.result.checkedBirthDateRule = false;\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    checkEmail() {\r\n      this.click = true\r\n      if (!this.result.email) {\r\n        this.result.checkedEmail = false;\r\n        this.warning.email = '이메일을 입력하세요'\r\n        return;\r\n      }\r\n      \r\n      if(!this.checkEmailRule()){\r\n        this.result.checkedEmail = false;\r\n        this.warning.email = '이메일을 정확히 입력하세요'\r\n        return\r\n      }\r\n\r\n      axios\r\n        .get('/api/users/check-email', { params: { email: this.result.email } })\r\n        .then((res) => {\r\n          this.result.checkedEmail = true;\r\n          this.success.email = this.result.email\r\n        })\r\n        .catch((err) => {\r\n          this.warning.email = '사용 불가능한 이메일 입니다'\r\n          this.result.checkedEmail = false;\r\n        });\r\n    },\r\n    checkUsername() {\r\n      this.click = true\r\n      if (!this.result.username) {\r\n        this.result.checkedUsername = false;\r\n        this.warning.username = '닉네임을 입력하세요'\r\n        return\r\n      }\r\n\r\n      if(!this.checkUsernameRule()){\r\n        this.result.checkedUsername = false;\r\n        this.warning.username = '닉네임이 규칙에 맞지 않습니다'\r\n        return\r\n      }\r\n\r\n      axios\r\n        .get('/api/users/check-username', {\r\n          params: { username: this.result.username },\r\n        })\r\n        .then((res) => {\r\n          this.result.checkedUsername = true;\r\n          this.success.username = this.result.username\r\n        })\r\n        .catch((err) => {\r\n          this.warning.username = '사용 불가능한 닉네임 입니다'\r\n          this.result.checkedUsername = false;\r\n        });\r\n    },\r\n    checkEmailRule(){\r\n      // 이메일 유효성 검사를 위한 정규식 표현 \r\n      const pattern = /^[A-Za-z0-9_\\.\\-]+@[A-Za-z0-9\\-]+\\.[A-za-z0-9\\-]+/;\r\n      if(pattern.test(this.result.email)){\r\n        this.result.checkedEmailRule = true\r\n        return true\r\n      }\r\n\r\n      this.result.checkedEmailRule = false\r\n      return false;\r\n    },\r\n    checkPasswordRule(){\r\n      const pattern = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=\\[\\]{}|;':\",.<>\\/?])[A-Za-z\\d!@#$%^&*()_+\\-=\\[\\]{}|;':\",.<>\\/?]{8,16}$/;\r\n      if(pattern.test(this.result.password)){\r\n        this.result.checkedPasswordRule = true\r\n        return true\r\n      }\r\n\r\n      this.result.checkedPasswordRule = false\r\n      return false\r\n    },\r\n    checkUsernameRule(){\r\n      const pattern = /^[A-Za-z0-9\\u1100-\\u11FF\\u3130-\\u318F\\uAC00-\\uD7A3]{4,10}$/;\r\n      if(pattern.test(this.result.username)){\r\n        this.result.checkedUsernameRule = true\r\n        return true\r\n      }\r\n      \r\n      this.result.checkedUsernameRule = false\r\n      return false\r\n    }\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}