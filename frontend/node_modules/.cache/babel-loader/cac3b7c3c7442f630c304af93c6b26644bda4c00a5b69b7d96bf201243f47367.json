{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vShow as _vShow, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, vModelRadio as _vModelRadio, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"mt-5 pt-4 pb-5 position-relative\"\n};\nconst _hoisted_2 = {\n  class: \"container\",\n  style: {\n    \"max-width\": \"600px\"\n  }\n};\nconst _hoisted_3 = {\n  class: \"card mb-4 p-3\"\n};\nconst _hoisted_4 = {\n  class: \"row g-3 text-start col-md-12\"\n};\nconst _hoisted_5 = {\n  class: \"col-md-12 mb-3\"\n};\nconst _hoisted_6 = {\n  class: \"input-group\"\n};\nconst _hoisted_7 = {\n  class: \"col-md-12 mb-3\"\n};\nconst _hoisted_8 = {\n  for: \"username\",\n  class: \"form-label fw-bold\"\n};\nconst _hoisted_9 = [\"textContent\"];\nconst _hoisted_10 = {\n  key: 1,\n  class: \"text-success fw-normal warning\"\n};\nconst _hoisted_11 = {\n  class: \"input-group\"\n};\nconst _hoisted_12 = {\n  class: \"col-md-12 mb-3\"\n};\nconst _hoisted_13 = {\n  class: \"form-label fw-bold\"\n};\nconst _hoisted_14 = [\"textContent\"];\nconst _hoisted_15 = {\n  class: \"btn-group w-100\",\n  role: \"group\"\n};\nconst _hoisted_16 = {\n  class: \"col-md-12 mb-0\"\n};\nconst _hoisted_17 = {\n  for: \"birthdate\",\n  class: \"form-label fw-bold\"\n};\nconst _hoisted_18 = [\"textContent\"];\nconst _hoisted_19 = {\n  class: \"card mb-4 p-3\"\n};\nconst _hoisted_20 = {\n  class: \"row g-3 text-start col-md-12\"\n};\nconst _hoisted_21 = {\n  class: \"col-md-12 mb-3\"\n};\nconst _hoisted_22 = {\n  class: \"col-md-12 mb-3\"\n};\nconst _hoisted_23 = {\n  class: \"col-md-12 mb-0\"\n};\nconst _hoisted_24 = {\n  class: \"d-flex justify-content-center gap-3\"\n};\nconst _hoisted_25 = {\n  class: \"text-end\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_ConfirmDialog = _resolveComponent(\"ConfirmDialog\");\n  return _openBlock(), _createElementBlock(\"main\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 뒤로가기 + 제목 \"), _cache[24] || (_cache[24] = _createElementVNode(\"h2\", {\n    class: \"fw-bold mb-4\"\n  }, \"개인정보 수정\", -1 /* HOISTED */)), _createElementVNode(\"form\", null, [_createCommentVNode(\" 기본 정보 섹션 \"), _cache[22] || (_cache[22] = _createElementVNode(\"h6\", {\n    class: \"mb-3\"\n  }, \"기본 정보\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" 이메일 \"), _createElementVNode(\"div\", _hoisted_5, [_createCommentVNode(\" 레이블을 input-group 위에 두고 form-label 클래스로 왼쪽 정렬 \"), _cache[11] || (_cache[11] = _createElementVNode(\"label\", {\n    for: \"email\",\n    class: \"form-label fw-bold\"\n  }, \"이메일 \", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"email\",\n    class: \"form-control\",\n    placeholder: \"example@domain.com\",\n    required: \"\",\n    name: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.result.email = $event),\n    readonly: \"\",\n    disabled: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.result.email]])])]), _createCommentVNode(\" 닉네임 \"), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"label\", _hoisted_8, [_cache[12] || (_cache[12] = _createTextVNode(\"닉네임 \")), !$data.result.checkedUsername ? _withDirectives((_openBlock(), _createElementBlock(\"span\", {\n    key: 0,\n    class: \"text-danger fw-normal warning\",\n    textContent: _toDisplayString($data.warning.username)\n  }, null, 8 /* PROPS */, _hoisted_9)), [[_vShow, $data.click]]) : _withDirectives((_openBlock(), _createElementBlock(\"span\", _hoisted_10, \"사용 가능한 닉네임입니다\", 512 /* NEED_PATCH */)), [[_vShow, $data.click]])]), _createElementVNode(\"div\", _hoisted_11, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    class: \"form-control\",\n    placeholder: \"사용할 닉네임\",\n    required: \"\",\n    name: \"username\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.result.username = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.result.username]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-outline-secondary\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.checkUsername && $options.checkUsername(...args))\n  }, \" 중복 확인 \")]), _cache[13] || (_cache[13] = _createElementVNode(\"span\", {\n    class: \"text-info warning\"\n  }, \"※ 4~10자의 한글, 영문, 숫자를 사용해 주세요.\", -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_12, [_createCommentVNode(\" 성별 \"), _createElementVNode(\"label\", _hoisted_13, [_cache[14] || (_cache[14] = _createTextVNode(\"성별 \")), _withDirectives(_createElementVNode(\"span\", {\n    class: \"text-danger fw-normal warning\",\n    textContent: _toDisplayString($data.warning.gender)\n  }, null, 8 /* PROPS */, _hoisted_14), [[_vShow, $data.click]])]), _createElementVNode(\"div\", _hoisted_15, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    class: \"btn-check\",\n    name: \"gender\",\n    id: \"male\",\n    value: false,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.result.gender = $event),\n    autocomplete: \"off\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.result.gender]]), _cache[15] || (_cache[15] = _createElementVNode(\"label\", {\n    class: \"btn btn-outline-secondary flex-fill\",\n    for: \"male\"\n  }, \" 남성 \", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    class: \"btn-check\",\n    name: \"gender\",\n    id: \"female\",\n    value: true,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.result.gender = $event),\n    autocomplete: \"off\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.result.gender]]), _cache[16] || (_cache[16] = _createElementVNode(\"label\", {\n    class: \"btn btn-outline-secondary flex-fill\",\n    for: \"female\"\n  }, \" 여성 \", -1 /* HOISTED */))])]), _createCommentVNode(\" 생년월일 \"), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"label\", _hoisted_17, [_cache[17] || (_cache[17] = _createTextVNode(\" 생년월일 \")), _withDirectives(_createElementVNode(\"span\", {\n    class: \"text-danger fw-normal warning\",\n    textContent: _toDisplayString($data.warning.birthDate)\n  }, null, 8 /* PROPS */, _hoisted_18), [[_vShow, $data.click]])]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"birthdate\",\n    class: \"form-control\",\n    required: \"\",\n    name: \"birthDate\",\n    placeholder: \"예) 20000101\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.result.birthDate = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.result.birthDate]])])])]), _createCommentVNode(\" 추가 정보 섹션 \"), _cache[23] || (_cache[23] = _createElementVNode(\"h6\", {\n    class: \"mb-3\"\n  }, \"추가 정보\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"div\", _hoisted_20, [_createCommentVNode(\" 키 \"), _createElementVNode(\"div\", _hoisted_21, [_cache[18] || (_cache[18] = _createElementVNode(\"label\", {\n    class: \"form-label fw-bold\"\n  }, \"키 (cm)\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.optionResult.height = $event),\n    min: \"0\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.optionResult.height, void 0, {\n    number: true\n  }]])]), _createCommentVNode(\" 현재 체중 \"), _createElementVNode(\"div\", _hoisted_22, [_cache[19] || (_cache[19] = _createElementVNode(\"label\", {\n    class: \"form-label fw-bold\"\n  }, \"현재 체중 (kg)\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.optionResult.weight = $event),\n    min: \"0\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.optionResult.weight, void 0, {\n    number: true\n  }]])]), _createCommentVNode(\" 목표 체중 \"), _createElementVNode(\"div\", _hoisted_23, [_cache[20] || (_cache[20] = _createElementVNode(\"label\", {\n    class: \"form-label fw-bold\"\n  }, \"목표 체중 (kg)\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.optionResult.targetWeight = $event),\n    min: \"0\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.optionResult.targetWeight, void 0, {\n    number: true\n  }]])])])]), _createCommentVNode(\" 저장/취소 버튼 \"), _createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-primary px-5\",\n    onClick: _cache[9] || (_cache[9] = (...args) => $options.handleUpdate && $options.handleUpdate(...args))\n  }, \"저장\"), _createVNode(_component_router_link, {\n    to: \"/\",\n    class: \"btn btn-outline-secondary px-5\"\n  }, {\n    default: _withCtx(() => _cache[21] || (_cache[21] = [_createTextVNode(\"취소\")])),\n    _: 1 /* STABLE */\n  })])]), _createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"a\", {\n    class: \"btn text-decoration-underline\",\n    onClick: _cache[10] || (_cache[10] = (...args) => $options.handleDelete && $options.handleDelete(...args))\n  }, \"회원 탈퇴\")])]), _createCommentVNode(\" ConfirmDialog 컴포넌트를 ref 로 선언 \"), _createVNode(_component_ConfirmDialog, {\n    ref: \"confirmDialog\"\n  }, null, 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["class","style","for","key","role","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","type","id","placeholder","required","name","_cache","$event","$data","result","email","readonly","disabled","_hoisted_7","_hoisted_8","_createTextVNode","checkedUsername","textContent","_toDisplayString","warning","username","_hoisted_9","click","_hoisted_10","_hoisted_11","onClick","args","$options","checkUsername","_hoisted_12","_hoisted_13","gender","_hoisted_14","_hoisted_15","value","autocomplete","_hoisted_16","_hoisted_17","birthDate","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","optionResult","height","min","number","_hoisted_22","weight","_hoisted_23","targetWeight","_hoisted_24","handleUpdate","_createVNode","_component_router_link","to","default","_withCtx","_","_hoisted_25","handleDelete","_component_ConfirmDialog","ref"],"sources":["C:\\Users\\taewo\\Desktop\\YamYamCoach\\frontend\\src\\views\\MyInfoView.vue"],"sourcesContent":["<template>\r\n  <main class=\"mt-5 pt-4 pb-5 position-relative\">\r\n    <div class=\"container\" style=\"max-width: 600px\">\r\n      <!-- 뒤로가기 + 제목 -->\r\n      <h2 class=\"fw-bold mb-4\">개인정보 수정</h2>\r\n\r\n      <form>\r\n        <!-- 기본 정보 섹션 -->\r\n        <h6 class=\"mb-3\">기본 정보</h6>\r\n        <div class=\"card mb-4 p-3\">\r\n          <div  class=\"row g-3 text-start col-md-12\">\r\n            <!-- 이메일 -->\r\n            <div class=\"col-md-12 mb-3\">\r\n              <!-- 레이블을 input-group 위에 두고 form-label 클래스로 왼쪽 정렬 -->\r\n              <label for=\"email\" class=\"form-label fw-bold\"\r\n                >이메일\r\n              </label>\r\n\r\n              <div class=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"email\"\r\n                  class=\"form-control\"\r\n                  placeholder=\"example@domain.com\"\r\n                  required\r\n                  name=\"email\"\r\n                  v-model=\"result.email\"\r\n                  readonly\r\n                  disabled\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <!-- 닉네임 -->\r\n            <div class=\"col-md-12 mb-3\">\r\n              <label for=\"username\" class=\"form-label fw-bold\"\r\n                >닉네임\r\n                <span class=\"text-danger fw-normal warning\" v-show=\"click\" v-if=\"!result.checkedUsername\" v-text=\"warning.username\"></span>\r\n                <span class=\"text-success fw-normal warning\" v-show=\"click\" v-else>사용 가능한 닉네임입니다</span>\r\n              </label>\r\n\r\n              <div class=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"username\"\r\n                  class=\"form-control\"\r\n                  placeholder=\"사용할 닉네임\"\r\n                  required\r\n                  name=\"username\"\r\n                  v-model=\"result.username\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-outline-secondary\"\r\n                  @click=\"checkUsername\"\r\n                >\r\n                  중복 확인\r\n                </button>\r\n              </div>\r\n              <span class=\"text-info warning\" >※ 4~10자의 한글, 영문, 숫자를 사용해 주세요.</span>\r\n            </div>\r\n\r\n            <div class=\"col-md-12 mb-3\">\r\n              <!-- 성별 -->\r\n              <label class=\"form-label fw-bold\"\r\n                >성별\r\n                <span class=\"text-danger fw-normal warning\" v-show=\"click\" v-text=\"warning.gender\"></span>\r\n              </label>\r\n                <div class=\"btn-group w-100\" role=\"group\">\r\n                  <input\r\n                  type=\"radio\"\r\n                  class=\"btn-check\"\r\n                  name=\"gender\"\r\n                  id=\"male\"\r\n                  :value=\"false\"\r\n                  v-model=\"result.gender\"\r\n                  autocomplete=\"off\"\r\n                />\r\n                <label class=\"btn btn-outline-secondary flex-fill\" for=\"male\">\r\n                  남성\r\n                </label>\r\n\r\n                <input\r\n                  type=\"radio\"\r\n                  class=\"btn-check\"\r\n                  name=\"gender\"\r\n                  id=\"female\"\r\n                  :value=\"true\"\r\n                  v-model=\"result.gender\"\r\n                  autocomplete=\"off\"\r\n                />\r\n                <label class=\"btn btn-outline-secondary flex-fill\" for=\"female\">\r\n                  여성\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- 생년월일 -->\r\n            <div class=\"col-md-12 mb-0\">\r\n              <label for=\"birthdate\" class=\"form-label fw-bold\">\r\n                생년월일\r\n                <span class=\"text-danger fw-normal warning\" v-show=\"click\" v-text=\"warning.birthDate\"></span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"birthdate\"\r\n                class=\"form-control\"\r\n                required\r\n                name=\"birthDate\"\r\n                placeholder=\"예) 20000101\"\r\n                v-model=\"result.birthDate\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n       \r\n\r\n        <!-- 추가 정보 섹션 -->\r\n        <h6 class=\"mb-3\">추가 정보</h6>\r\n        <div class=\"card mb-4 p-3\">\r\n          <div  class=\"row g-3 text-start col-md-12\">\r\n            <!-- 키 -->\r\n            <div class=\"col-md-12 mb-3\">\r\n              <label class=\"form-label fw-bold\">키 (cm)</label>\r\n              <input\r\n                type=\"number\"\r\n                class=\"form-control\"\r\n                v-model.number=\"optionResult.height\"\r\n                min=\"0\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <!-- 현재 체중 -->\r\n            <div class=\"col-md-12 mb-3\">\r\n              <label class=\"form-label fw-bold\">현재 체중 (kg)</label>\r\n              <input\r\n                type=\"number\"\r\n                class=\"form-control\"\r\n                v-model.number=\"optionResult.weight\"\r\n                min=\"0\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <!-- 목표 체중 -->\r\n            <div class=\"col-md-12 mb-0\">\r\n              <label class=\"form-label fw-bold\">목표 체중 (kg)</label>\r\n              <input\r\n                type=\"number\"\r\n                class=\"form-control\"\r\n                v-model.number=\"optionResult.targetWeight\"\r\n                min=\"0\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 저장/취소 버튼 -->\r\n        <div class=\"d-flex justify-content-center gap-3\">\r\n          <button type=\"button\" class=\"btn btn-primary px-5\" @click=\"handleUpdate\">저장</button>\r\n          <router-link to=\"/\" class=\"btn btn-outline-secondary px-5\"\r\n            >취소</router-link\r\n          >\r\n        </div>\r\n      </form>\r\n\r\n      <div class=\"text-end\">\r\n        <a class=\"btn text-decoration-underline\" @click=\"handleDelete\">회원 탈퇴</a>\r\n      </div>\r\n    </div>\r\n    <!-- ConfirmDialog 컴포넌트를 ref 로 선언 -->\r\n    <ConfirmDialog ref=\"confirmDialog\" />\r\n  </main>\r\n</template>\r\n\r\n<script>\r\nimport axios from '@/plugins/axios';\r\nimport ConfirmDialog from '@/components/ConfirmDialog.vue';\r\nimport store from '@/store';\r\n\r\nexport default {\r\n  name: 'MyInfoView',\r\n  components: { ConfirmDialog },\r\n  data() {\r\n    return {\r\n      result : {\r\n        email: '',\r\n        username: '',\r\n        gender: '',\r\n        birthDate: '',\r\n        checkedUsername: '',\r\n        checkedUsernameRule: '',\r\n      },\r\n      optionResult : {\r\n        height: '',\r\n        weight: '',\r\n        targetWeight: '',\r\n      },\r\n      click: false,\r\n      warning: {\r\n        email: '',\r\n        username: '',\r\n        gender: '',\r\n        birthDate: '',\r\n      },\r\n      success: {\r\n        username:'',\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    axios\r\n      .get('/api/users')\r\n      .then((res) => {\r\n        this.result.email = res.data.email;\r\n        this.result.username = res.data.username;\r\n        this.result.gender = res.data.gender;\r\n        this.result.birthDate = res.data.birthDate.replaceAll(\"-\",\"\");\r\n        this.optionResult.height = res.data.height;\r\n        this.optionResult.weight = res.data.weight;\r\n        this.optionResult.targetWeight = res.data.targetWeight;\r\n        this.success.username = res.data.username;\r\n        this.result.checkedUsername = true\r\n      })\r\n      .catch((err) => {});\r\n  },\r\n  methods: {\r\n    async handleUpdate() {\r\n      this.warningMessage()\r\n      if(Object.values(this.result).includes('')){\r\n        this.click = true\r\n        return\r\n      }\r\n\r\n\r\n      // 빈 값이 있으면\r\n      if (Object.values(this.optionResult).includes('')) {\r\n        const ok = await this.$refs.confirmDialog.open({\r\n          title: '선택정보 확인',\r\n          message: `\r\n            선택정보 미입력 시 정확한 식단분석이 불가능합니다.<br/>\r\n            그래도 진행하시겠습니까?\r\n          `\r\n        });\r\n        if (!ok) {\r\n          // 유저가 취소 눌렀을 때\r\n          return;\r\n        }\r\n      }\r\n      // 확인 눌렀거나, 애초에 빈 값이 없을 때\r\n      this.save();\r\n    },\r\n    save() {\r\n      var stringToDate = this.result.birthDate;\r\n      stringToDate =\r\n        stringToDate.substring(0, 4) +\r\n        '-' +\r\n        stringToDate.substring(4, 6) +\r\n        '-' +\r\n        stringToDate.substring(6, 8);\r\n      // 입력 했을때 20000101 에서 보내기직전에 2000-01-01로 바꾸지 않기 위해서 새로만들어서 보내기기\r\n\r\n\r\n\r\n      const post = {\r\n        userId : this.$store.state.account.userId,\r\n        username: this.result.username,\r\n        gender: this.result.gender,\r\n        birthDate: stringToDate,\r\n        height: this.optionResult.height,\r\n        weight: this.optionResult.weight,\r\n        targetWeight: this.optionResult.targetWeight,\r\n      };\r\n\r\n      axios\r\n        .put('/api/users', post)\r\n        .then((res) => {\r\n          this.$router.push({ name: 'MyView' });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    warningMessage(){\r\n      if(!this.result.email){\r\n        this.warning.email = \"이메일을 입력하세요\"\r\n        this.result.checkedEmail = false\r\n      }\r\n      else if(this.result.email && !this.result.checkedEmail || this.success.email !== this.result.email){\r\n        this.result.checkedEmail = false \r\n        this.warning.email = \"이메일 중복을 확인하세요\"\r\n      }\r\n      else if(this.result.email){\r\n        if(this.checkEmailRule()){\r\n          this.warning.email = ''\r\n        }\r\n        else{\r\n          this.warning.email = '이메일을 정확히 입력하세요'\r\n        }\r\n      }\r\n\r\n      if(!this.result.username){\r\n        this.warning.username = '닉네임을 입력하세요'\r\n        this.result.checkedUsername = false\r\n      }\r\n      else if((this.result.username && !this.result.checkedUsername) || this.success.username !==this.result.username){\r\n        this.result.checkedUsername = false\r\n        this.warning.username = \"닉네임 중복을 확인하세요\"\r\n      }\r\n      else if(this.result.username){\r\n        if(this.checkUsernameRule()){\r\n          this.warning.username = ''\r\n        }\r\n        else{\r\n          this.warning.username = '닉네임이 규칙에 맞지않습니다'\r\n        }\r\n      }\r\n\r\n      if(this.result.gender === ''){\r\n        this.warning.gender = '성별을 선택하세요'\r\n      }\r\n      else{\r\n        this.warning.gender = ''\r\n      }\r\n\r\n      if (!this.result.birthDate) {\r\n        this.warning.birthDate = '생년월일을 입력하세요';\r\n      } else if (!this.isValidCompactDate()) {\r\n        this.warning.birthDate = '생년월일을 정확히 입력하세요'\r\n      }\r\n      else{\r\n        this.warning.birthDate = ''\r\n      }\r\n    },\r\n    isValidCompactDate() {\r\n      const pattern = /^(19|20)\\d{2}(?:(?:0[13578]|1[02])(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)(?:0[1-9]|[12]\\d|30)|02(?:0[1-9]|1\\d|2\\d))$/;\r\n      if (!pattern.test(this.result.birthDate)) {\r\n        return false;\r\n      }\r\n      // 윤년이면서 2월 29일인 경우만 별도 허용\r\n      const year = parseInt(this.result.birthDate.slice(0,4), 10);\r\n      const month = this.result.birthDate.slice(4,6), day = this.result.birthDate.slice(6,8);\r\n      if (month === \"02\" && day === \"29\") {\r\n        return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);\r\n      }\r\n      return true;\r\n    },\r\n    checkUsername() {\r\n      this.click = true\r\n      if (!this.result.username) {\r\n        this.result.checkedUsername = false;\r\n        this.warning.username = '닉네임을 입력하세요'\r\n        return\r\n      }\r\n\r\n      if(!this.checkUsernameRule()){\r\n        this.result.checkedUsername = false;\r\n        this.warning.username = '닉네임이 규칙에 맞지 않습니다'\r\n        return\r\n      }\r\n\r\n      axios\r\n        .get('/api/users/check-username', {\r\n          params: { username: this.result.username },\r\n        })\r\n        .then((res) => {\r\n          this.result.checkedUsername = true;\r\n          this.success.username = this.result.username\r\n        })\r\n        .catch((err) => {\r\n          this.warning.username = '사용 불가능한 닉네임 입니다'\r\n          this.result.checkedUsername = false;\r\n        });\r\n    },\r\n    checkUsernameRule(){\r\n      const pattern = /^[A-Za-z0-9\\u1100-\\u11FF\\u3130-\\u318F\\uAC00-\\uD7A3]{4,10}$/;\r\n      if(pattern.test(this.result.username)){\r\n        this.result.checkedUsernameRule = true\r\n        return true\r\n      }\r\n      \r\n      this.result.checkedUsernameRule = false\r\n      return false\r\n    },\r\n    async handleDelete() {\r\n  \r\n      const ok = await this.$refs.confirmDialog.open({\r\n        title: '회원 탈퇴 확인',\r\n        message: `\r\n          회원 탈퇴 시 모든 정보가 삭제되고 복구가 불가능합니다.<br/>\r\n          그래도 진행하시겠습니까?\r\n        `\r\n      });\r\n      if (!ok) {\r\n        return;\r\n      }\r\n      \r\n      // 확인 눌렀거나\r\n      this.delete()\r\n      \r\n    },\r\n    delete(){\r\n      axios\r\n        .delete('/api/users', {\r\n          params: { userId: this.$store.state.account.userId },\r\n        })\r\n        .then((res) => {\r\n           this.$router.push({ name: 'HomeView' });\r\n        })\r\n        .catch((err) => {\r\n          \r\n        });\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.hero {\r\n  min-height: 0; /* 기존 Hero 가 있다면 제거 */\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}